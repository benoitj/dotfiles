#!/usr/bin/env bash
# ~/.bashrc: executed by bash(1) for non-login shells.

# --------------- PATH ----------------
pathappend() {
    for ARG in "$@"; do
        test -d "${ARG}" || continue
        PATH=${PATH//:${ARG}:/:}
        PATH=${PATH/#${ARG}:/}
        PATH=${PATH/%:${ARG}/}
        export PATH="${PATH:+"${PATH}:"}${ARG}"
    done
}

pathprepend() {
    for ARG in "$@"; do
        test -d "${ARG}" || continue
        PATH=${PATH//:${ARG}:/:}
        PATH=${PATH/#${ARG}:/}
        PATH=${PATH/%:${ARG}/}
        export PATH="${ARG}${PATH:+":${PATH}"}"
    done
}

pathprepend ~/.local/bin \
    ~/go/bin \
    ~/node_modules/.bin \
    ~/perl5/bin

# --------------- Environment variables ----------------
export _JAVA_AWT_WM_NONREPARENTING=1
export DMENU=dmenu
export EDITOR="vim"
export LANG=en_US.UTF-8
export TERMINAL=st

export PATH_CFG="$HOME/.config"
export PATH_DOC="$HOME/Documents"
export PATH_DOT="$HOME/src/dotfiles"
export PATH_SRC="$HOME/src"

export PERL5LIB="/home/benoit/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"
export PERL_LOCAL_LIB_ROOT="/home/benoit/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"
export PERL_MB_OPT="--install_base \"/home/benoit/perl5\""
export PERL_MM_OPT="INSTALL_BASE=/home/benoit/perl5"
export XDG_DATA_DIRS="${XDG_DATA_DIRS}:/var/lib/flatpak/exports/share:/home/benoit/.local/share/flatpak/exports/share"

# --------------- GUIX Environment variables ----------------
# only on foreign distro
GUIX_LOCPATH="$HOME/.guix-profile/lib/locale"
export GUIX_LOCPATH

GUIX_EXTRA_PROFILES="$HOME/.config/guix/profiles"
export GUIX_EXTRA_PROFILES
for guix_extra_profile_path in $GUIX_EXTRA_PROFILES/*; do
    profile_name="${guix_extra_profile_path##*/}"
    GUIX_PROFILE="$GUIX_EXTRA_PROFILES/$profile_name/$profile_name"
    source "$GUIX_PROFILE/etc/profile"
done

GUIX_PROFILE="$HOME/.guix-profile"
source "$GUIX_PROFILE/etc/profile"

# --------------- stop here if non-interactive ----------------
case $- in
    *i*) ;; # interactive
    *) return ;;
esac

# --------------- CDPATH expansion ----------------

export CDPATH=".:~:$PATH_CFG:$PATH_DOC:$PATH_SRC"

# --------------- history setup ----------------

# history size
HISTSIZE=500000
HISTFILESIZE=100000
HISTFILE="$HOME/.cache/bash_history"
HISTCONTROL=erasedups:ignoreboth

# history time is iso format
HISTTIMEFORMAT='%F %T '

# -------------- bash shell options ------------------

shopt -s autocd
shopt -s cdable_vars
shopt -s cdspell
shopt -s checkwinsize
shopt -s cmdhist
shopt -s dirspell
shopt -s dotglob
shopt -s expand_aliases
shopt -s extglob
shopt -s globstar
shopt -s histappend

set -o vi
set +o noclobber
# prevent overwrite on redirection
# Use >| to force
#set -o noclobber

# -------------- Pager ------------------
if test -x /usr/bin/lesspipe; then
    export LESSOPEN="| /usr/bin/lesspipe %s"
    export LESSCLOSE="/usr/bin/lesspipe %s %s"
fi

export LESS_TERMCAP_mb="[35m" # magenta
export LESS_TERMCAP_md="[96m" # light cyan
export LESS_TERMCAP_me=""      # "0m"
export LESS_TERMCAP_se=""      # "0m"
export LESS_TERMCAP_so="[94m" # blue
export LESS_TERMCAP_ue=""      # "0m"
export LESS_TERMCAP_us="[4m"  # underline

# -------------- setup colors ------------------
test -x /usr/bin/dircolors &&
    test -r "$HOME/.config/bash/dircolors" &&
    eval "$(dircolors -b $HOME/.config/bash/dircolors)" ||
    eval "$(dircolors -b)"

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

if ! shopt -oq posix; then
    if [ -f /usr/share/bash-completion/bash_completion ]; then
        . /usr/share/bash-completion/bash_completion
    elif [ -f /etc/bash_completion ]; then
        . /etc/bash_completion
    fi
fi

for guix_extra_profile_path in $GUIX_EXTRA_PROFILES/*; do
    profile_name="${guix_extra_profile_path##*/}"
    comp_path="$GUIX_EXTRA_PROFILES/$profile_name/$profile_name/etc/bash_completion.d"
    if test -d "$comp_path"; then
        for comp_file in $comp_path/*; do
            # shellcheck source=/dev/null
            source "$comp_file"
        done
    fi
done

test -f ~/.config/bash/aliases && source ~/.config/bash/aliases

if [[ -d ~/.config/bash/bash_functions.d ]]; then
    for f in ~/.config/bash/bash_functions.d/*; do source $f; done
fi
### basic options

# history expansion with space
# !!<space> replace with last command. !2<space> replace with second history
bind Space:magic-space

# --------------- tab completion ---------------

# case insensitive file completion
bind "set completion-ignore-case on"

# - and _ are the same in file completion
bind "set completion-map-case on"

# display multiple matches on first tab
bind "set show-all-if-ambiguous on"

# add trailing / on completion of dir symlink
bind "set mark-symlinked-directories on"

# incremental history with up/down
bind '"\e[A": history-search-backward'
bind '"\e[B": history-search-forward'
bind '"\e[C": forward-char'
bind '"\e[D": backward-char'

#### Tools configuration
# make less more friendly for non-text input files, see lesspipe(1)
#[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

alias grep='grep --color=auto'
alias gpg-agent-update="gpg-connect-agent updatestartuptty /bye > /dev/null"

# --------------- PROMPT  --------------
# trim long paths in the prompt
export PROMPT_DIRTRIM=2

promptCommand() {
    local lastStatus=$?
    local P='$'

    local r='\[\e[91m\]'
    local g='\[\e[37m\]'
    local h='\[\e[34m\]'
    local u='\[\e[95m\]'
    local p='\[\e[92m\]'
    local w='\[\e[96m\]'
    local b='\[\e[36m\]'
    local x='\[\e[0m\]'

    if test "${lastStatus}" != 0; then
        p=$r
    fi

    if test "${EUID}" == 0; then
        u=$r
    fi

    local B=$(git branch --show-current 2>/dev/null)
    test "$dir" = "\W"
    local countme="$B"

    test -n "$B" -a -n "$(git status -s 2>/dev/null)" && b=$r
    test -n "$B" && canPush && b=$r
    test -n "$B" && B="$g on $b$B$g"

    local short="$u\u$g@$h\h$g:$w\w$B $p$P$x "
    local long="$gâ•” $u\u$g@$h\h$g:$w\w$B\n$gâ•š $p$P$x "
    local double="$gâ•” $u\u$g@$h\h$g:$w\w\n$gâ•‘ $B\n$gâ•š $p$P$x "

    if test ${#countme} -gt "${PROMPT_MAX:-15}"; then
        PS1="$double"
    elif test ${#countme} -gt "${PROMPT_LONG:-5}"; then
        PS1="$long"
    else
        PS1="$short"
    fi
}

PROMPT_COMMAND="promptCommand"
